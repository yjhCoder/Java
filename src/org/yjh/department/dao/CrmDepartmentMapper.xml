<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.yjh.department.dao.CrmDepartmentMapper">
	<resultMap id="BaseResultMap" type="org.yjh.department.domain.CrmDepartment">
		<id column="depId" property="depid" jdbcType="VARCHAR" />
		<result column="depName" property="depname" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 定义自己的resultMap 给postId赋值 -->
	<resultMap type="org.yjh.department.domain.CrmDepartment" id="ResultMapExt" extends="BaseResultMap">
		<!-- 一对多 -->
		<collection property="postSet" ofType="org.yjh.post.domain.CrmPost">
			<id column="postId" property="postid"/>
			<result column="postName" property="postname"/>
		</collection>
	
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		depId, depName
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="org.yjh.department.domain.CrmDepartmentExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from crm_department
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from crm_department
		where depId = #{depid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from crm_department
		where depId = #{depid,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="org.yjh.department.domain.CrmDepartmentExample">
		delete from crm_department
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.yjh.department.domain.CrmDepartment">
		insert into crm_department (depId, depName)
		values (#{depid,jdbcType=VARCHAR}, #{depname,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.yjh.department.domain.CrmDepartment">
		insert into crm_department
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="depid != null">
				depId,
			</if>
			<if test="depname != null">
				depName,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="depid != null">
				#{depid,jdbcType=VARCHAR},
			</if>
			<if test="depname != null">
				#{depname,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.yjh.department.domain.CrmDepartmentExample"
		resultType="java.lang.Integer">
		select count(*) from crm_department
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update crm_department
		<set>
			<if test="record.depid != null">
				depId = #{record.depid,jdbcType=VARCHAR},
			</if>
			<if test="record.depname != null">
				depName = #{record.depname,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update crm_department
		set depId = #{record.depid,jdbcType=VARCHAR},
		depName = #{record.depname,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.yjh.department.domain.CrmDepartment">
		update crm_department
		<set>
			<if test="depname != null">
				depName = #{depname,jdbcType=VARCHAR},
			</if>
		</set>
		where depId = #{depid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.yjh.department.domain.CrmDepartment">
		update crm_department
		set depName = #{depname,jdbcType=VARCHAR}
		where depId = #{depid,jdbcType=VARCHAR}
	</update>

 
	<resultMap type="org.yjh.department.domain.CrmDepartment" id="BaseResultMapExt" extends="BaseResultMap">
		<!-- 映射post  一对多 -->
		<collection property="postSet" ofType="org.yjh.post.domain.CrmPost">
			<id column="postId" property="postid"/>
			<result column="postName" property="postname"/>
		</collection>
	</resultMap>
	
	<select id="findById" parameterType="string" resultMap="BaseResultMapExt">
		select * from crm_department,crm_post where
		crm_department.depId = crm_post.depId
		and crm_department.depId = #{depId}
	</select>
	
	<select id="findAll" resultMap="BaseResultMap">
		SELECT * from crm_department
	</select>


</mapper>